// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SportskiCentar_ASA.Data.EF;
using System;

namespace SportskiCentar_ASA.Data.Migrations
{
    [DbContext(typeof(MojContext))]
    [Migration("20190108113039_inicijalna")]
    partial class inicijalna
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Administrator", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ime");

                    b.Property<int>("NalogID");

                    b.Property<int>("PlataID");

                    b.Property<string>("Prezime");

                    b.HasKey("id");

                    b.HasIndex("NalogID");

                    b.HasIndex("PlataID");

                    b.ToTable("Administratori");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Artikal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cijena");

                    b.Property<int>("Kolicina");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<int>("PodKategorijaID");

                    b.HasKey("id");

                    b.HasIndex("PodKategorijaID");

                    b.ToTable("Artikli");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.ArtikliFajlovi", b =>
                {
                    b.Property<int>("ArtikliFajloviId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArtikalID");

                    b.Property<int>("FajlID");

                    b.HasKey("ArtikliFajloviId");

                    b.HasIndex("ArtikalID");

                    b.HasIndex("FajlID");

                    b.ToTable("ArtikliFajlovi");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Dostava", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa");

                    b.Property<decimal>("Cijena");

                    b.HasKey("id");

                    b.ToTable("Dostava");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Drzava", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("id");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Fajl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatumDodavanja");

                    b.Property<string>("Naziv");

                    b.Property<byte[]>("Podaci");

                    b.Property<string>("Tip");

                    b.HasKey("Id");

                    b.ToTable("Fajlovi");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Grad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DrzavaID");

                    b.Property<string>("Naziv");

                    b.HasKey("id");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Kategorija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Klijent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GradID");

                    b.Property<string>("Ime");

                    b.Property<string>("JBMG");

                    b.Property<int>("NalogID");

                    b.Property<string>("Prezime");

                    b.Property<string>("Spol");

                    b.HasKey("id");

                    b.HasIndex("GradID");

                    b.HasIndex("NalogID");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Nalog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsAdministrator");

                    b.Property<bool>("IsKlijent");

                    b.Property<bool>("IsUposlenik");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Lozinka");

                    b.Property<string>("email");

                    b.Property<bool>("emailActivated");

                    b.HasKey("id");

                    b.ToTable("Nalozi");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Narudzba", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DostavaID");

                    b.Property<int?>("KlijentID");

                    b.Property<bool>("ZeliDostavu");

                    b.HasKey("id");

                    b.HasIndex("DostavaID");

                    b.HasIndex("KlijentID");

                    b.ToTable("Narudzbe");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.NarudzbaStavke", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArtikalID");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbaID");

                    b.HasKey("id");

                    b.HasIndex("ArtikalID");

                    b.HasIndex("NarudzbaID");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Plata", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Iznos");

                    b.HasKey("id");

                    b.ToTable("Plate");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.PodKategorija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KategorijaID");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.HasKey("id");

                    b.HasIndex("KategorijaID");

                    b.ToTable("PodKategorije");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Prostorija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("id");

                    b.ToTable("Prostorije");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Racun", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatumIzdavanja");

                    b.Property<int?>("DostavaId");

                    b.Property<int>("KlijentId");

                    b.Property<int?>("NarudzbaID");

                    b.Property<decimal>("UkupanIznos");

                    b.HasKey("id");

                    b.HasIndex("DostavaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("NarudzbaID");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.RacunStavke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArtikalId");

                    b.Property<int>("Kolicina");

                    b.Property<int>("RacunId");

                    b.HasKey("Id");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("RacunId");

                    b.ToTable("RacunStavke");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Rezervacija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KlijentID");

                    b.Property<bool>("Odobrena");

                    b.Property<int>("TerminID");

                    b.Property<int?>("UplataID");

                    b.HasKey("id");

                    b.HasIndex("KlijentID");

                    b.HasIndex("TerminID");

                    b.HasIndex("UplataID");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Termin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cijena");

                    b.Property<DateTime>("DatumIVrijeme");

                    b.Property<int>("ProstorijaID");

                    b.HasKey("id");

                    b.HasIndex("ProstorijaID");

                    b.ToTable("Termini");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.TipUposlenika", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("id");

                    b.ToTable("TipoviUposlenika");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.UnlockToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUsed");

                    b.Property<int>("NalogID");

                    b.Property<bool>("isUsed");

                    b.Property<string>("token");

                    b.HasKey("id");

                    b.HasIndex("NalogID");

                    b.ToTable("UnlockTokeni");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Uplata", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Iznos");

                    b.HasKey("id");

                    b.ToTable("Uplate");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Uposlenik", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GradID");

                    b.Property<string>("Ime");

                    b.Property<int>("NalogID");

                    b.Property<int>("PlataID");

                    b.Property<string>("Prezime");

                    b.Property<int>("TipUposlenikaID");

                    b.HasKey("id");

                    b.HasIndex("GradID");

                    b.HasIndex("NalogID");

                    b.HasIndex("PlataID");

                    b.HasIndex("TipUposlenikaID");

                    b.ToTable("Uposlenici");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Administrator", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Plata", "Plata")
                        .WithMany()
                        .HasForeignKey("PlataID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Artikal", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.PodKategorija", "PodKategorija")
                        .WithMany()
                        .HasForeignKey("PodKategorijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.ArtikliFajlovi", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Artikal", "Artikal")
                        .WithMany()
                        .HasForeignKey("ArtikalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Fajl", "Fajl")
                        .WithMany()
                        .HasForeignKey("FajlID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Grad", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Klijent", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Narudzba", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Dostava", "Dostava")
                        .WithMany()
                        .HasForeignKey("DostavaID");

                    b.HasOne("SportskiCentar_ASA.Data.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.NarudzbaStavke", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Artikal", "Artikal")
                        .WithMany()
                        .HasForeignKey("ArtikalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.PodKategorija", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Racun", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Dostava", "Dostava")
                        .WithMany()
                        .HasForeignKey("DostavaId");

                    b.HasOne("SportskiCentar_ASA.Data.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaID");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.RacunStavke", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Artikal", "Artikal")
                        .WithMany()
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Racun", "Racun")
                        .WithMany()
                        .HasForeignKey("RacunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Rezervacija", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Termin", "Termin")
                        .WithMany()
                        .HasForeignKey("TerminID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Uplata", "Uplata")
                        .WithMany()
                        .HasForeignKey("UplataID");
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Termin", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Prostorija", "Prostorija")
                        .WithMany()
                        .HasForeignKey("ProstorijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.UnlockToken", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SportskiCentar_ASA.Data.Models.Uposlenik", b =>
                {
                    b.HasOne("SportskiCentar_ASA.Data.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.Plata", "Plata")
                        .WithMany()
                        .HasForeignKey("PlataID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SportskiCentar_ASA.Data.Models.TipUposlenika", "TipUposlenika")
                        .WithMany()
                        .HasForeignKey("TipUposlenikaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
